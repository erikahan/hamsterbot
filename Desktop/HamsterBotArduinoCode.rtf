{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf400
{\fonttbl\f0\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red6\green33\blue24;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl420\sa300

\f0\fs30 \cf2 \cb3 #include // Include servo library\
const int FwdPin = 2; // switch input\uc0\u8232 const int BackPin = 3; //\u8232 const int RightPin = 4; //\u8232 const int LeftPin = 6; //\
const int switchPin = 7; // add a switch to another input pin \'96 turns on and off\
const int potPin = A0; // speed control\
// start everything low\uc0\u8232 int FwdButton = LOW;\u8232 int BackButton = LOW;\u8232 int LeftButton = LOW;\u8232 int RightButton = LOW;\u8232 int On = LOW;\u8232 int wLeft = LOW;\u8232 int wRight = LOW;\
// change speed\uc0\u8232 float speedPot = 1.0;\
Servo servoLeft; // Declare left and right servos\uc0\u8232 Servo servoRight;\
boolean running = false;\
void setup() // initialize all directional pins\uc0\u8232 \{\
Serial.begin(9600);\
pinMode(FwdPin, INPUT);\uc0\u8232 pinMode(BackPin, INPUT);\u8232 pinMode(RightPin, INPUT);\u8232 pinMode(LeftPin, INPUT);\u8232 pinMode(switchPin, INPUT); //switchpin\
// potentiometer pin\uc0\u8232 // don\'92t need to declare analog pin mode\
pinMode(A0, INPUT);\
pinMode(8, INPUT); // Set right whisker pin to input\uc0\u8232 pinMode(9, INPUT);\
servoLeft.attach(13); // Attach left signal to pin 13\uc0\u8232 servoRight.attach(12); // Attach right signal to pin 12\
\}\
void loop() // Main loop auto-repeats\uc0\u8232 \{\u8232 FwdButton = digitalRead(FwdPin);\u8232 BackButton = digitalRead(3);\u8232 RightButton = digitalRead(4);\u8232 LeftButton = digitalRead(6);\u8232 On = digitalRead(switchPin);\
//speedPot = analogRead(potPin);\
//how we would map if we\'92re multiplying or dividing\uc0\u8232 //speedPot = map(speedPot,0,1023,0.1,2.0);\
//this is how we map if adding and subtracting\uc0\u8232 // speedPot = map(speedPot,0,1023,0,1000);\
//temp \'97\uc0\u8232 //speedPot=1;\
//On = digitalRead(switchPin);\
if (On == HIGH) \{\uc0\u8232 delay(100);\u8232 running = !running;\u8232 \}\
if(FwdButton == HIGH && running == true)\uc0\u8232 \{\u8232 forward(0);\u8232 \}\u8232 else if(BackButton == HIGH && running == true)\u8232 \{\u8232 backward(0);\u8232 \}\
else if(RightButton == HIGH && running == true)\uc0\u8232 \{\u8232 rightTurn(0);\u8232 \}\
else if(LeftButton == HIGH && running == true)\uc0\u8232 \{\u8232 leftTurn(0);\u8232 \}\
if(running == false)\{\uc0\u8232 stopServos();\
\}\
//byte wLeft = digitalRead(5); // Copy left result to wLeft\uc0\u8232 //byte wRight = digitalRead(7); // Copy right result to wRight\
if((wLeft == 0) && (wRight == 0)) // If both whiskers contact\uc0\u8232 \{\u8232 // forward(1000); // Back up 1 second\u8232 //leftTurn(800); // Turn left about 120 degrees\u8232 \}\u8232 else if(wLeft == 0) // If only left whisker contact\u8232 \{\u8232 // backward(1000); // Back up 1 second\u8232 //rightTurn(400); // Turn right about 60 degrees\u8232 \}\u8232 else if(wRight == 0) // If only right whisker contact\u8232 \{\u8232 // backward(1000); // Back up 1 second\u8232 // leftTurn(400); // Turn left about 60 degrees\u8232 \}\u8232 else // Otherwise, no whisker contact\u8232 \{\u8232 // forward(20); // Forward 1/50 of a second\u8232 \}\
debug();\uc0\u8232 \}\
void debug() \{\
Serial.print(\'93FwdButton \'93);\uc0\u8232 Serial.print(FwdButton);\u8232 Serial.print(\'94 \'93);\
Serial.print(\'93BackButton \'93);\uc0\u8232 Serial.print(BackButton);\u8232 Serial.print(\'94 \'93);\
Serial.print(\'93LeftButton \'93);\uc0\u8232 Serial.print(LeftButton);\u8232 Serial.print(\'94 \'93);\
Serial.print(\'93RightButton \'93);\uc0\u8232 Serial.print(RightButton);\u8232 Serial.print(\'94 \'93);\
Serial.print(\'93On \'93);\uc0\u8232 Serial.print(On);\u8232 Serial.print(\'94 \'93);\
Serial.print(\'93wLeft \'93);\uc0\u8232 Serial.print(wLeft);\u8232 Serial.print(\'94 \'93);\
Serial.print(\'93wRight \'93);\uc0\u8232 Serial.print(wRight);\u8232 Serial.print(\'94 \'93);\
Serial.print(\'93speedPot \'93);\uc0\u8232 Serial.print(speedPot);\u8232 Serial.print(\'94 \'93);\
Serial.print(\'93running \'93);\uc0\u8232 Serial.print(running);\u8232 Serial.print(\'94 \'93);\
Serial.println();\uc0\u8232 \}\
void forward(int time) \{\uc0\u8232 servoLeft.writeMicroseconds(1700+speedPot); // Left wheel counterclockwise\u8232 servoRight.writeMicroseconds(1300-speedPot); // Right wheel clockwise\
// servoLeft.writeMicroseconds(1500*speedPot); // Left wheel counterclockwise\uc0\u8232 // servoRight.writeMicroseconds(1500*-speedPot); // Right wheel clockwise\
delay(time); // Maneuver for time ms\uc0\u8232 \}\
void leftTurn(int time) // Left turn function\uc0\u8232 \{\u8232 servoLeft.writeMicroseconds(1300-speedPot); // Left wheel clockwise\u8232 servoRight.writeMicroseconds(1300-speedPot); // Right wheel clockwise\u8232 delay(time); // Maneuver for time ms\u8232 \}\
void rightTurn (int time) // Right turn function\uc0\u8232 \{\u8232 servoLeft.writeMicroseconds(1700+speedPot); // Left wheel counterclockwise\u8232 servoRight.writeMicroseconds(1700+speedPot); // Right wheel counterclockwise\u8232 delay(time); // Maneuver for time ms\u8232 \}\
void backward(int time) // Backward function\uc0\u8232 \{\u8232 servoLeft.writeMicroseconds(1300-speedPot); // Left wheel clockwise\u8232 servoRight.writeMicroseconds(1700+speedPot); // Right wheel counterclockwise\u8232 delay(time); // Maneuver for time ms\u8232 \}\
void stopServos()\{\uc0\u8232 servoLeft.writeMicroseconds(1500); // us = 1600,1598,\'851502,1500\u8232 servoRight.writeMicroseconds(1500); // us = 1400,1402,\'851498,1500\u8232 delay(20);\
\}\
\
}